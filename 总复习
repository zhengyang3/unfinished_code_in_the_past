	局部变量   static
	
	
	
	结构体与联合的区别
		结构体 struct
		联合   union
				二者都可以由多个类型成员组成，都是自定义类型；
				不同的是联合中它只存放一个被选中的成员，也就是说每次只能使用一
				个变量所有成员公用一个空间，结构体的成员各自有独立的空间；
	
	
	strcpy          const char* str2  传进来的是不可改变的常量或变量
	char* strcpy(char* str,const char* str2)		
	｛
		if(str1==NULL||str2==NULL) return NULL;
		if(str1==str2)  return str1;
		while ((*str1++=*str2++)!='\0');
		return p;	
	｝
	
	strcat 自己看，常考
	
	const #define 定义 常量的区别  以及优缺点
		const 定义的常量是有数据类型 const int a=5;
		编译器会对数据进行安全类型检查！
		#define pi 3.14  (它是只是单纯的字符串替换)
		
		

数组与指针的区别：
	char* p=NULL; 	
	p=(char*)malloc(15);
	strcpy(p,"123456");
		
	
	
	char a[]="1234";  
		
	char* b ="1234";    注意：char* b='A'; 是不行的；因为没有分配空间；这
							是与第一个的主要区别；
	
	将指针变量b指向常量字符串“1234”的首地址；与第二个的
	差别主要体现在sizeof的上面；




 宏定义(就是单纯的字符串替换，定义一个新函数时，函数名不能包括这人字符串，
 							否则也会被替换)；  #define;
  写一个程序用来计算一年有多少秒，使用宏；
	#define SUM (365*24*60) 
	使用时用SUM;  （这个分号不能丢了）
	使用宏定义（计算两个数之间的大小 ，返回最大的数）
	#define FUN(a,b) a>b?a:b 
	
static 的功能 
	限制 变量的使用范围（作用域）
	int 类型的值与 0 作比较
	if(a>0)
	float类型的变量跟0做比较
	if(x>0.0000000001&&x<-0.000000001)
	
	switch()      (括号内只能放字符型与int型两种)
	{
		case 1:
		{
		
		}
		break;
		
	}	
	
	如何在另外一个文件 中使用 已经在某个文件 中定义好的全局变量 
	使用extern
	你可以把全局变量定义在头文件 这中 然后在其他 的文件 当中引入头文件 ；
	
	

	do{}while();先执行一次，再判断；
	while(); 	先判断后执行；
	
	
	int main()
	{
		a=10;
		b=a++;
		c=++a;
		d=10*a++;
		e=3*(a++);
			
	}
	
	队列与栈的区别
	
	
	如何将一个字符串倒序输出；
	char a[]="1234567";
	char b[]
	while(*a++=*b++)
	
	
	链表
		链表的逆序：
		
		
		char* a="123";
		char* b="123";
		这个时候其实a与b是相等的！
		int a＝1；
		int b=1;
		这个时候a!=b;
		
		
将字符串中的所有小写字
		
		
函数
	获取系统当前时间 
	＃include<unstid.h>
	#include<time.h>
	1:	time_t p;
		time(&p); (打印的时候用％d去打印就行了，没见过的类型全部用int型)
		printf("%d",p);
	2:	p=time(NULL);
		
		
		
		
	在参数里面看到const,表示	可传不可改，就是输入参数
		
		
	struct tm *localtime(const time_t *timep);
	把系统 时间 秒直接 转换成结构体类型的时间 
	struct tm 
	struct tm 
	{
		int tm_sec;秒
		int tm_min;分
		int tm_hour;时间
		int tm_mday;
		int tm_mon; 默认是0－11；
		int tm_year; 年是从1900年开始所以需要显示正常就必须 加上1900；
		
		//下面的不常用
		int tm_wday;
		int tm_yday;
		int tm_isdst;
	};		
		
用户注册的时候 
	需要获取系统时间把系统时间转换成时间 字符串保存到 链表和文件 当中去
	规定反时间 转换成如下格式 字符串
	2013.01.01 | 2：03：09  使用sprintf;
	
	当用户登录 成功的时候 我们需要 需要获取当前系统时间 然后转换成字符串保存到链表以及文件当中
	当用户登录 成功的时候 你需要 去链表之中去索引查找到相应的节点然后改变相应 的登陆时间
	当用户登录成功之后
	之前的操作是打印登陆成功
	之前的操作是打印登录 成功
	用户操作

1: 查询用户信息
2：查看我登录 了多久
3：退出登录

	
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
						
	
	
		
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
